generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  Id                   Int            @id @default(autoincrement())
  Description          String
  Address              String
  City                 String
  Date                 DateTime
  Time                 String?
  Visit                Visit
  ClientPhoneNumber    String
  ClientName           String?
  MasterId             Int
  AnnouncedPrice       String         @default("0")
  Status               OrderStatus    @default(pending)
  Price                String         @default("0")
  TelephoneRecord      String?
  Latitude             Float?
  Longitude            Float?
  Total                Int            @default(0)
  Expenses             Int            @default(0)
  MasterName           String?
  Comments             String?
  Master               User           @relation(fields: [MasterId], references: [Id])
  MessageId            String?
  AllOrdersMessageId   String?
  ActiveOrderMessageId String?
  MasterSalary         Int            @default(0)
  CompanyShare         Int            @default(0)
  ClosingOrderId       Int?           @default(0)
  BotMessage           String         @default("") @db.VarChar(500)
  IsWorking            IsWorkingOrder @default(close)
  Type                 OrderType
}

model User {
  Id              Int        @id @default(autoincrement())
  UserName        String
  Password        String
  TelegramChatId  String
  MessageThreadId String
  Role            Role       @default(master)
  IsOnline        Boolean    @default(false)
  InterestRate    Int        @default(50) // Процентная ставка
  Status          UserStatus @default(atWork)
  Salary          Int        @default(0)
  Order           Order[]
}

enum OrderStatus {
  pending // Ожидает
  fulfilled // Успешно
  rejectedByClient // Отказ клиента
  rejectedByMaster // Отказ мастера
  atWork // В работе
  active //активная заявка
  masterWentForSparePart // Мастер отъехал за зч
  awaitingPayment // ожидает оплаты
  takeToSD //забрал на сд
}

enum IsWorkingOrder {
  isWorking
  close
}

enum OrderType {
  specialized
  notSpecialized
}

enum UserStatus {
  atWork // Работает
  waitForWork // Ждет заказ
  wentForSparePart // Уехал за ЗЧ
  dayOff // Выходной
}

enum Visit {
  primary // Первичный
  repeated // Повторный
  guarantee //Гарантия
}

enum Role {
  master
  admin
}
